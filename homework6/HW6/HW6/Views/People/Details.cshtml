@model HW6.Models.ViewModel.ViewModel

@{
    ViewBag.Title = "Details";
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>

<h2>Details</h2>

<div class="row">
    <div class="col">
        <h4>Person</h4>
        <hr />
        <dl class="dl-horizontal">


            <dt>
                @Html.DisplayNameFor(model => model.Person.FullName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Person.FullName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Person.PreferredName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Person.PreferredName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Person.PhoneNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Person.PhoneNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Person.FaxNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Person.FaxNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Person.EmailAddress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Person.EmailAddress)
            </dd>
    </div>


    <div class="col">
        <dt>
            @Html.DisplayNameFor(model => model.Person.Photo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Person.Photo)
        </dd>
    </div>
</div>

@if (ViewBag.found)
{
    <div class="row">
        <div class="col">
            <h3>Company Profile</h3>
            <dl class="dl-horizontal">
                <dt>Company:</dt>
                <dd>@Html.DisplayFor(model => model.Customer.CustomerName)</dd>

                <dt>Phone:</dt>
                <dd>@Html.DisplayFor(model => model.Customer.PhoneNumber)</dd>

                <dt>Fax:</dt>
                <dd>@Html.DisplayFor(model => model.Customer.FaxNumber)</dd>

                <dt>Website:</dt>
                <dd>@Html.DisplayFor(model => model.Customer.WebsiteURL)</dd>

                <dt>Member Since:</dt>
                <dd>@Html.DisplayFor(model => model.Customer.AccountOpenedDate)</dd>
            </dl>
        </div>

        <div class="col">
            <div id="map"></div>
            <script>
                var map;
                // Initialize map
                function initMap() {
                    // location
                    var long = @Model.Customer.DeliveryLocation.Longitude;
                    var lati = @Model.Customer.DeliveryLocation.Latitude;
               
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: lati, lng: long},
                        zoom: 8
                    });

                    var marker = new google.maps.Marker({ position: { lat: lati, lng: long }, map: map });
                }
                
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAE9-NYXQGs3LHEbPLTd51wPXG7Z5pP3Z0&callback=initMap"
                    async defer></script>
        </div>

    </div>

    <div class="row">
        <div class="col">
            <h3>Purchase History Summary</h3>
            <dl class="dl-horizontal">
                <dd>Orders: @Html.DisplayFor(model => model.Customer.Orders.Count)</dd>
                <dd>Gross Sales: @String.Format("{0:C}", ViewBag.GrossSales)</dd>
                <dd>Gross Profit: @String.Format("{0:C}", ViewBag.GrossProfit)</dd>
            </dl>

        </div>
    </div>

    <div class="row">
        <div class="col">
            <h3>Items Purchased</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">StockItemID</th>
                        <th scope="col">Description</th>
                        <th scope="col">Line Profit</th>
                        <th scope="col">Sales Person</th>
                    </tr>
                </thead>

                @foreach (var items in Model.InvoiceLine)
                {
                    <tbody>
                        <tr>
                            <td>@Html.DisplayFor(i => items.StockItemID)</td>
                            <td>@Html.DisplayFor(i => items.Description)</td>
                            <td>@Html.DisplayFor(i => items.LineProfit)</td>
                            <td>@Html.DisplayFor(i => items.Invoice.Person.FullName)</td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>
}




<p>
    @Html.ActionLink("Back to List", "Search")
</p>